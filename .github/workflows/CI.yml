on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install packages and run tests
        run: |
          pip install pytest pytest-docker postgres-copy-binary-python postgres-copy-binary-extension-module
          pytest tests/
    
  python-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build python package wheel
        run: |
          pip install poetry
          cd postgres-copy-binary-python
          poetry build
      - name: Upload python package wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: postgres-copy-binary-python/dist

  linux-extension-module:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build extension module wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter -m postgres-copy-binary-extension-module/Cargo.toml
          manylinux: auto
      - name: Upload extension module wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows-extension-module:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build extension module wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter -m postgres-copy-binary-extension-module/Cargo.toml
      - name: Upload extension module wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos-extension-module:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build extension module wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter -m postgres-copy-binary-extension-module/Cargo.toml
      - name: Upload extension module wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  publish-all:
    name: Publish extension module and python package
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - linux-extension-module
      - windows-extension-module
      - macos-extension-module
      - python-package
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
